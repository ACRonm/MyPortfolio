@inherits LayoutComponentBase

@inject NavigationManager NavManager
@inject IJSRuntime JSRuntime

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="CustomTheme" />

<MudLayout style="overflow: hidden;">

    <MudAppBar Elevation="5" Style="opacity: 0.98">

        @if (_page == "/")
        {
            <MudButton href="/blog" Typo="Typo.Button" Variant="Variant.Outlined" Color="Color.Primary"
                TextColor="Color.Light" aria-label="Go to blog button">Blog</MudButton>
        }
        else
        {
            <MudButton href="/" Typo="Typo.Button" Variant="Variant.Outlined" Color="Color.Primary" TextColor="Color.Light"
                aria-label="Go to home button">Home</MudButton>
        }


        <MudSpacer />
        <MudIconButton Icon="@(_isDarkMode ? Icons.Material.Outlined.Brightness7 : Icons.Material.Outlined.Brightness4)"
            Color="Color.Primary" OnClick="@ToggleDarkMode" aria-label="Toggle colour theme" />

        <div style="width: 10px;"></div>

        @* Github icon with link *@
        <MudLink Href="https://github.com/ACRonm" Target="_blank" aria-label="Go to my github">
            <MudIcon Icon="@Icons.Custom.Brands.GitHub" Title="GitHub" />
        </MudLink>
    </MudAppBar>
    <MudMainContent>
        <div id="blob"></div>
        <div id="blur"></div>

        @Body
    </MudMainContent>
</MudLayout>
<script src="./javascript/blob.js"></script>


@code {

    string? _page;
    private bool _isDarkMode = true;
    private bool _drawerOpen = false;

    protected override void OnInitialized() // Corrected here
    {
        var uri = new Uri(NavManager.Uri).AbsolutePath;
        _page = uri;
        NavManager.LocationChanged += HandleLocationChanged;
    }

    private void HandleLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        var uri = new Uri(e.Location);
        _page = uri.AbsolutePath;

        StateHasChanged();
    }

    void ToggleDarkMode()
    {
        _isDarkMode = !_isDarkMode;
    }

    void ToggleDrawer()
    {
        _drawerOpen = !_drawerOpen;
    }

    MudTheme CustomTheme = new MudTheme()
        {
            Typography = new Typography()
            {
                Default = new Default()
                {
                    FontFamily = new[] { "Roboto" },
                },
                Button = new Button()
                {
                    FontFamily = new[] { "Jetbrains Mono" },
                }
            },

            Palette = new PaletteLight()
            {
                Background = "#f5f5f5",
                Primary = "#8B0000",
                Secondary = "#8B0000",
                AppbarBackground = "#f5f5f5",
            },
            PaletteDark = new PaletteDark()
            {
                Background = "#1A1A27",
                AppbarBackground = "#1A1A27",
                Primary = "#FFC701",
                TextPrimary = "#CBD6ED",
                Secondary = "#FFC701",

            }
        };

}
