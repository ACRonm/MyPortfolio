@page "/blogpost"

@using System.Net.Http  
@using System

@inject HttpClient Http


<div class="blog-post">
    <h2>@Title</h2>
    <p>@Date.ToShortDateString()</p>
    <MudText Typo="Typo.body1">@((MarkupString)(content ?? errorMessage))</MudText>
</div>

@code {
    [Parameter]
    public string Title { get; set; } = "Default Title";

    [Parameter]
    public DateTime Date { get; set; } = DateTime.Now;

    [Parameter]
    public string? content { get; set; }

    private string errorMessage = "Loading...";
    private string? markdownContent;

    protected override async Task OnInitializedAsync()
    {

        try
        {
            var markdown = await Http.GetStringAsync("/Blog/post1.md");
            markdownContent = Markdig.Markdown.ToHtml(markdown);

            content = TruncateText(markdownContent, 30);

        }
        catch (HttpRequestException)
        {
            errorMessage = "Failed to load content. No file found.";
        }
    }

    private string TruncateText(string text, int wordLimit)
    {
        if (string.IsNullOrEmpty(text)) return text;

        var words = text.Split(' ');
        if (words.Length <= wordLimit) return text;

        return string.Join(' ', words.Take(wordLimit)) + " [...]";
    }
}